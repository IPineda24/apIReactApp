{
	// Place your temperature-log workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
    // }
    "Express Controller":{
        "scope": "javascript,typescript",
	 	"prefix": "e-controller",
	 	"body": [
             "controller.$1 = async (req, res, next) => {",
             "\ttry{",
             "\t\t$0",
             "\t} catch (error) {",
             "\t\tnext(error);",
             "\t}",
	 		"}"
	 	],
	 	"description": "Create a basic controller"
    },
    "Express Service":{
        "scope": "javascript,typescript",
	 	"prefix": "e-service",
	 	"body": [
             "service.$1 = async ($2) => {",
             "\ttry{",
             "\t\t$0",
             "\t} catch (error) {",
             "\t\tthrow error;",
             "\t}",
	 		"}"
	 	],
	 	"description": "Create a basic service"
    },
    "JSON Response":{
        "scope": "javascript,typescript",
         "prefix": "e-response",
         "body": "return res.status(${1|200,201,404,500,401,403,400,409|}).json($2);",
         "description": "Create a basic Response"
    }
}